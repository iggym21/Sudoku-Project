import pygame
import sys
from SudokuGenerator import SudokuGenerator
from Cell import Cell
from Board import Board

# Initialize PyGame
pygame.init()

# Screen dimensions
WIDTH, HEIGHT = 600, 700
SCREEN = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Sudoku")

# Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
GRAY = (200, 200, 200)
ORANGE = (255, 165, 0)

# Fonts
TITLE_FONT = pygame.font.Font(None, 80)
SUBTITLE_FONT = pygame.font.Font(None, 50)
BUTTON_FONT = pygame.font.Font(None, 40)

def draw_button(text, x, y, width, height, color, text_color=BLACK):
    pygame.draw.rect(SCREEN, color, (x, y, width, height), border_radius=8)
    pygame.draw.rect(SCREEN, BLACK, (x, y, width, height), 3, border_radius=8)
    label = BUTTON_FONT.render(text, True, text_color)
    SCREEN.blit(label, (x + (width - label.get_width()) // 2, y + (height - label.get_height()) // 2))
    return pygame.Rect(x, y, width, height)

def start_screen():
    SCREEN.fill(WHITE)

    title = TITLE_FONT.render("Welcome to Sudoku", True, BLACK)
    SCREEN.blit(title, ((WIDTH - title.get_width()) // 2, 100))

    subtitle = SUBTITLE_FONT.render("Select Game Mode:", True, BLACK)
    SCREEN.blit(subtitle, ((WIDTH - subtitle.get_width()) // 2, 200))

    easy_btn = draw_button("EASY", 100, 350, 120, 60, ORANGE)
    medium_btn = draw_button("MEDIUM", 240, 350, 120, 60, ORANGE)
    hard_btn = draw_button("HARD", 380, 350, 120, 60, ORANGE)

    pygame.display.update()

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == pygame.MOUSEBUTTONDOWN:
                if easy_btn.collidepoint(event.pos):
                    return 30
                elif medium_btn.collidepoint(event.pos):
                    return 40
                elif hard_btn.collidepoint(event.pos):
                    return 50

def game_screen(difficulty):
    board = Board(540, 540, SCREEN, difficulty)
    running = True
    clock = pygame.time.Clock()

    while running:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()

            if event.type == pygame.MOUSEBUTTONDOWN:
                pos = pygame.mouse.get_pos()
                clicked_cell = board.click(pos[0], pos[1])
                if clicked_cell:
                    board.select(*clicked_cell)

            if event.type == pygame.KEYDOWN:
                if board.selected_cell:
                    row, col = board.selected_cell
                    if event.key == pygame.K_RETURN:
                        if board.cells[row][col].sketched_value != 0:
                            board.place_number(board.cells[row][col].sketched_value)
                    elif event.key == pygame.K_BACKSPACE:
                        board.clear()
                    elif pygame.K_1 <= event.key <= pygame.K_9:
                        board.sketch(event.key - pygame.K_0)

        SCREEN.fill(WHITE)
        board.draw()
        pygame.display.flip()
        clock.tick(60)

        if board.is_full():
            return board.check_board()  # Returns True if solved correctly

def end_screen(win):
    SCREEN.fill(WHITE)
    message = TITLE_FONT.render("Game Won!" if win else "Game Over :(", True, BLACK)
    SCREEN.blit(message, ((WIDTH - message.get_width()) // 2, 200))

    restart_btn = draw_button("RESTART", 250, 350, 100, 50, ORANGE)
    pygame.display.update()

    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == pygame.MOUSEBUTTONDOWN:
                if restart_btn.collidepoint(event.pos):
                    return "restart"

def main():
    while True:
        difficulty = start_screen()
        game_result = game_screen(difficulty)
        result = end_screen(game_result)
        if result == "restart":
            continue

if __name__ == "__main__":
    main()
